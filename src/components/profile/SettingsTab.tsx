import { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Input } from '@/components/ui/input';
import NotificationSettings from '@/components/NotificationSettings';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';
import { secureLocalStorage } from '@/utils/security';

interface SettingsTabProps {
  entityType: string;
  onEntityTypeChange: (value: string) => void;
}

const SettingsTab = ({ entityType, onEntityTypeChange }: SettingsTabProps) => {
  const { toast } = useToast();
  const [userType, setUserType] = useState<'client' | 'carrier' | 'logist'>(
    secureLocalStorage.getItem('user_type') || 'client'
  );
  const [passportData, setPassportData] = useState({
    passport_series: secureLocalStorage.getItem('passport_series') || '',
    passport_number: secureLocalStorage.getItem('passport_number') || '',
    passport_date: secureLocalStorage.getItem('passport_date') || '',
    passport_issued_by: secureLocalStorage.getItem('passport_issued_by') || ''
  });

  const saveUserType = () => {
    secureLocalStorage.setItem('user_type', userType);
    const typeLabel = userType === 'client' ? '–∑–∞–∫–∞–∑—á–∏–∫' : userType === 'carrier' ? '–ø–µ—Ä–µ–≤–æ–∑—á–∏–∫' : '–ª–æ–≥–∏—Å—Ç';
    toast({
      title: '–¢–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑–º–µ–Ω—ë–Ω',
      description: `–í—ã —Ç–µ–ø–µ—Ä—å ${typeLabel}`
    });
  };

  const savePassportData = () => {
    Object.entries(passportData).forEach(([key, value]) => {
      secureLocalStorage.setItem(key, value);
    });
    toast({
      title: '–ü–∞—Å–ø–æ—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã',
      description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞'
    });
  };

  return (
    <div className="space-y-4">
      <NotificationSettings />

      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Icon name="Globe" size={20} />
            –Ø–∑—ã–∫ –∏ –≤–∞–ª—é—Ç–∞
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="grid md:grid-cols-2 gap-4">
            <div className="space-y-2">
              <label className="text-sm font-medium">–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</label>
              <Select defaultValue="ru" onValueChange={(val) => {
                localStorage.setItem('user_language', val);
                toast({ title: '–Ø–∑—ã–∫ –∏–∑–º–µ–Ω—ë–Ω', description: '–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–±–Ω–æ–≤–∏—Ç—Å—è –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–π –∑–∞–≥—Ä—É–∑–∫–µ' });
              }}>
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="ru">üá∑üá∫ –†—É—Å—Å–∫–∏–π</SelectItem>
                  <SelectItem value="en">üá¨üáß English</SelectItem>
                  <SelectItem value="es">üá™üá∏ Espa√±ol</SelectItem>
                  <SelectItem value="de">üá©üá™ Deutsch</SelectItem>
                  <SelectItem value="fr">üá´üá∑ Fran√ßais</SelectItem>
                  <SelectItem value="zh">üá®üá≥ ‰∏≠Êñá</SelectItem>
                </SelectContent>
              </Select>
            </div>

            <div className="space-y-2">
              <label className="text-sm font-medium">–í–∞–ª—é—Ç–∞</label>
              <Select defaultValue="RUB" onValueChange={(val) => {
                localStorage.setItem('user_currency', val);
                toast({ title: '–í–∞–ª—é—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∞', description: `–¶–µ–Ω—ã –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã –≤ ${val}` });
              }}>
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="RUB">‚ÇΩ –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å (RUB)</SelectItem>
                  <SelectItem value="USD">$ –î–æ–ª–ª–∞—Ä –°–®–ê (USD)</SelectItem>
                  <SelectItem value="EUR">‚Ç¨ –ï–≤—Ä–æ (EUR)</SelectItem>
                  <SelectItem value="GBP">¬£ –§—É–Ω—Ç —Å—Ç–µ—Ä–ª–∏–Ω–≥–æ–≤ (GBP)</SelectItem>
                  <SelectItem value="CNY">¬• –ö–∏—Ç–∞–π—Å–∫–∏–π —é–∞–Ω—å (CNY)</SelectItem>
                  <SelectItem value="KZT">‚Ç∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏–π —Ç–µ–Ω–≥–µ (KZT)</SelectItem>
                  <SelectItem value="BYN">Br –ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å (BYN)</SelectItem>
                  <SelectItem value="UAH">‚Ç¥ –£–∫—Ä–∞–∏–Ω—Å–∫–∞—è –≥—Ä–∏–≤–Ω–∞ (UAH)</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </div>
        </CardContent>
      </Card>
      
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Icon name="Users" size={20} />
            –¢–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <p className="text-sm text-muted-foreground">
            –ò–∑–º–µ–Ω–∏—Ç–µ —Ä–æ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ: –∑–∞–∫–∞–∑—á–∏–∫, –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫ –∏–ª–∏ –ª–æ–≥–∏—Å—Ç
          </p>
          <div className="flex gap-4 items-end">
            <div className="flex-1">
              <Select value={userType} onValueChange={(val: 'client' | 'carrier' | 'logist') => setUserType(val)}>
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="client">–ó–∞–∫–∞–∑—á–∏–∫</SelectItem>
                  <SelectItem value="carrier">–ü–µ—Ä–µ–≤–æ–∑—á–∏–∫</SelectItem>
                  <SelectItem value="logist">–õ–æ–≥–∏—Å—Ç</SelectItem>
                </SelectContent>
              </Select>
            </div>
            <Button onClick={saveUserType}>
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
            </Button>
          </div>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Icon name="Building" size={20} />
            –¢–∏–ø –ª–∏—Ü–∞
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <p className="text-sm text-muted-foreground">
            –ò–∑–º–µ–Ω–∏—Ç—å —Ç–∏–ø —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
          </p>
          <div className="flex gap-4 items-end">
            <div className="flex-1">
              <Select value={entityType} onValueChange={onEntityTypeChange}>
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="individual">–§–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ</SelectItem>
                  <SelectItem value="self_employed">–°–∞–º–æ–∑–∞–Ω—è—Ç—ã–π</SelectItem>
                  <SelectItem value="individual_entrepreneur">–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å (–ò–ü)</SelectItem>
                  <SelectItem value="legal">–Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ</SelectItem>
                </SelectContent>
              </Select>
            </div>
            <Button onClick={() => {
              toast({
                title: '–¢–∏–ø –ª–∏—Ü–∞ –æ–±–Ω–æ–≤–ª—ë–Ω',
                description: '–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ'
              });
            }}>
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
            </Button>
          </div>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Icon name="CreditCard" size={20} />
            –ü–∞—Å–ø–æ—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <p className="text-sm text-muted-foreground">
            –í–≤–µ–¥–∏—Ç–µ –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç–µ –≤–∞—à–∏ –ø–∞—Å–ø–æ—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
          </p>
          <div className="grid md:grid-cols-2 gap-4">
            <div className="space-y-2">
              <label className="text-sm font-medium">–°–µ—Ä–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞</label>
              <Input
                value={passportData.passport_series}
                onChange={(e) => setPassportData({ ...passportData, passport_series: e.target.value })}
                placeholder="1234"
                maxLength={4}
              />
            </div>
            <div className="space-y-2">
              <label className="text-sm font-medium">–ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞</label>
              <Input
                value={passportData.passport_number}
                onChange={(e) => setPassportData({ ...passportData, passport_number: e.target.value })}
                placeholder="123456"
                maxLength={6}
              />
            </div>
            <div className="space-y-2">
              <label className="text-sm font-medium">–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏</label>
              <Input
                type="date"
                value={passportData.passport_date}
                onChange={(e) => setPassportData({ ...passportData, passport_date: e.target.value })}
              />
            </div>
            <div className="space-y-2">
              <label className="text-sm font-medium">–ö–µ–º –≤—ã–¥–∞–Ω</label>
              <Input
                value={passportData.passport_issued_by}
                onChange={(e) => setPassportData({ ...passportData, passport_issued_by: e.target.value })}
                placeholder="–û—Ç–¥–µ–ª –£–§–ú–°..."
              />
            </div>
          </div>
          <Button onClick={savePassportData} className="w-full md:w-auto">
            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
          </Button>
        </CardContent>
      </Card>

      <Card className="border-red-200 dark:border-red-900">
        <CardHeader>
          <CardTitle className="flex items-center gap-2 text-red-600 dark:text-red-400">
            <Icon name="Trash2" size={20} />
            –û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <p className="text-sm text-muted-foreground">
            –£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ. –í—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ, –∏—Å—Ç–æ—Ä–∏—è –¥–æ—Å—Ç–∞–≤–æ–∫ –∏ —Ä–µ–π—Ç–∏–Ω–≥–∏ –±—É–¥—É—Ç –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ —É–¥–∞–ª–µ–Ω—ã.
          </p>
          <Button 
            variant="destructive" 
            onClick={() => {
              if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å. –í—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ.')) {
                secureLocalStorage.clear();
                localStorage.clear();
                window.location.href = '/';
              }
            }}
            className="w-full md:w-auto"
          >
            <Icon name="Trash2" size={18} className="mr-2" />
            –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç –Ω–∞–≤—Å–µ–≥–¥–∞
          </Button>
        </CardContent>
      </Card>
      
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Icon name="Eye" size={20} />
            –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">
          <div className="space-y-4">
            <div>
              <h3 className="font-semibold mb-2">–†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞</h3>
              <p className="text-sm text-muted-foreground mb-3">
                –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
              </p>
              <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
                {[
                  { value: 'small', label: '–ú–∞–ª–µ–Ω—å–∫–∏–π', size: '14px' },
                  { value: 'medium', label: '–°—Ä–µ–¥–Ω–∏–π', size: '16px' },
                  { value: 'large', label: '–ë–æ–ª—å—à–æ–π', size: '18px' },
                  { value: 'xlarge', label: '–û—á–µ–Ω—å –±–æ–ª—å—à–æ–π', size: '20px' }
                ].map(({ value, label, size }) => {
                  const currentSize = localStorage.getItem('textSize') || 'medium';
                  return (
                    <button
                      key={value}
                      onClick={() => {
                        localStorage.setItem('textSize', value);
                        window.dispatchEvent(new CustomEvent('textSizeChange', { detail: value }));
                        toast({
                          title: '–†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ –∏–∑–º–µ–Ω—ë–Ω',
                          description: `–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ${label.toLowerCase()} —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞`
                        });
                      }}
                      className={`p-4 border rounded-lg text-left transition-all ${
                        currentSize === value
                          ? 'border-primary bg-primary/5'
                          : 'border-border hover:border-primary/50'
                      }`}
                    >
                      <div className="font-semibold mb-1">{label}</div>
                      <div className="text-muted-foreground" style={{ fontSize: size }}>
                        Aa
                      </div>
                    </button>
                  );
                })}
              </div>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default SettingsTab;